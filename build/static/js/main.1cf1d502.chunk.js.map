{"version":3,"sources":["page/article/article.less","request.js","store/actions.js","page/home/Home.js","page/article/article.js","page/ablum/ablum.js","serviceWorker.js","store/rootReducer.js","store/actionTypes.js","store/index.js","index.js","route.js","img/antumn.webp","page/home/Home.less"],"names":["module","exports","article","time","markdown","require","polyfill","request","method","url","params","opts","body","JSON","stringify","mode","headers","Content-Type","fetch","then","res","json","catch","err","console","error","fetchPost","dispatch","fetch_data","getDirectory","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","t0","sent","abrupt","type","data","stop","apply","this","arguments","onincrement","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","log","props","action","getData","window","__initData__","receive_data","fetchDate","forEach","v","fold","setState","Promise","resolve","reject","index","new_data","value","i","_this2","_react_16_8_3_react_default","createElement","className","styles","home","logo","count","onClick","content","map","item","path","key","title","toggle","bind","item_name","unfold","list","href","_id","src","alt","album_name","Component","connect","marked","setOptions","renderer","Renderer","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","highlight","code","lang","hljs","getLanguage","highlightAuto","Article","getArticle","id","location","search","slice","concat","style","dangerouslySetInnerHTML","__html","Ablum","getPic","Boolean","hostname","match","rootRuducer","combineReducers","directory","length","undefined","configStore","store","init","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","BrowserRouter","Route","component","Home","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","p","seal"],"mappings":"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","file":"static/js/main.1cf1d502.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"src-page-article-article__article--2PAnz\",\"time\":\"src-page-article-article__time--3Azsw\",\"markdown\":\"src-page-article-article__markdown--3CIse\"};","require('es6-promise').polyfill();\nrequire('isomorphic-fetch');\n\nvar request = (method, url, params) => {\n  let opts = {\n      method: method,\n  body: JSON.stringify(params),\n      mode: \"cors\",\n      headers: {\n    \"Content-Type\": \"application/json\",\n      }\n  };\n  return fetch(url, opts)\n          .then(res => res.json())\n          .catch(err => {\n              console.error(err);\n          })\n}\n\nexport default request","import request from '../request'\n\n\nexport const fetchPost = () => {\n  return function (dispatch) {\n    request('get', '/api/directory').then(res => \n      dispatch(fetch_data(res))\n    )\n    \n  }\n}\nexport const getDirectory = async () => {\n  return {\n    type: 'directory',\n    data: await request('get', 'http://localhost:9999/api/directory')\n  }\n}\nexport const onincrement =  () => {\n  return {\n    type:'increment'\n  }\n  \n}\n\nexport const fetch_data = (data) => {\n  \n  return {\n    type: 'receive_data',\n    data: data\n  }\n}","import React, { Component } from 'react';\nimport styles from './Home.less'\nimport request from '../../request'\nimport { connect } from 'react-redux'\nimport * as action from '../../store/actions'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      data: [],\n    }\n  }\n  onIncrement (){\n    console.log(this.props);\n    \n      this.props.dispatch(action.onincrement());\n    };\n    \n  componentDidMount() {\n    // if(! window.__initData__ ) this.props.fetchPost()\n    this.getData()\n\n  }\n  async getData() {\n    if (typeof window === 'undefined') {\n      return false\n    }\n    let data = window.__initData__?this.props.receive_data.data:await this.fetchDate()\n    data.forEach(v => {\n      v.fold = true\n    })\n    this.setState({\n      data: data\n    })\n    \n  }\n  fetchDate() {\n    return new Promise((resolve,reject)=>{\n      request('get', '/api/directory')\n      .then(res => {\n        resolve(res.data)\n      })\n    })\n  }\n  toggle(index) {\n    let new_data = this.state.data\n    \n    new_data.forEach((value, i) => {\n      if (i === index) {\n        value.fold = !value.fold\n      } else {\n        value.fold = true\n      }\n    })\n    this.setState({\n      data: new_data\n    })\n\n    new_data = null\n  }\n  render() {\n    let {receive_data} = this.props\n    // console.log(receive_data);\n    // let data = receive_data.data\n    // console.log(data);\n    // let {data} = this.state\n    let data = receive_data.data?receive_data.data:this.state.data\n  \n\n    return (\n      <div className={styles.home}>\n        <header>\n          <p>风满楼</p>\n          <div className={styles.logo}></div>\n        </header>\n        <div>{this.props.count}</div>\n        <button onClick={this.props.onincrement}>increment</button>\n\t\t\t\t<div className={styles.content}>\n          {\n           data && data.map((item, index) => {\n              let path = item.path\n              return (\n                <div key={index}>\n                  <div className={styles.title} onClick={this.toggle.bind(this, index)}>{item.item_name}</div>\n                  <ul className={item.fold ? styles.fold : styles.unfold}>\n                    {\n                      item.list.map((article, index) => {\n                        return (\n                          <li key={index}>\n                            <a href={path + '?id=' + article._id}>\n                              <img src={require('../../img/antumn.webp')} alt=\"\" />\n                              <p>{article.title || article.album_name}</p>\n                            </a>\n                          </li>\n                        )\n                      })\n                    }\n                  </ul>\n                </div>\n\n              )\n\n            })\n          }\n\n        </div>\n      </div >\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    receive_data: state.receive_data,\n    count:state.count\n  }\n};\n\n\nexport default connect(mapStateToProps,action)(App);\n\n","import React, { Component } from 'react'\nimport style from './article.less'\nimport marked from 'marked'\nimport hljs from 'highlight.js'\nimport 'highlight.js/styles/tomorrow.css';\nimport request from '../../request'\nimport {connect} from 'react-redux'\nmarked.setOptions({\n  renderer: new marked.Renderer(),\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  smartLists: true,\n  smartypants: false,\n  highlight: function(code, lang) {\n    if (lang && hljs.getLanguage(lang)) {\n      return hljs.highlight(lang, code, true).value;\n    } else {\n      return hljs.highlightAuto(code).value;\n    }\n  }\n});\n\nclass Article extends Component {\n\tconstructor() {\n    super()\n    this.state = {\n      article:[]\n    }\n\t}\n  componentDidMount() {\n    // if (typeof window === 'undefined') {\n    //   return false\n    // }\n    if(window.__initData__){\n      let data = window.__initData__.data\n      // data.content = marked(data.content || \"\", { sanitize: true })\n      this.setState({\n        article:data\n      })\n    }else{\n      this.getArticle()    \n    }\n\n  }\n  getArticle() {\n    let id = window.location.search.slice(4)\n    request('get',`/api/detail?id=${id}`)\n      .then(res=>{\n        res.data.content = marked(res.data.content || \"\", { sanitize: true })\n        this.setState({\n          article:res.data\n        })\n      })\n  }\n\trender() {\n    let {receive_data} = this.props\n    let article = receive_data.data?receive_data.data:this.state.article\n    \n\t\treturn (\n\t\t\t<div className={style.article}>\n        <h1>{article.title}</h1>\n        <div className={style.time}>{article.time}</div>\n        <div className={style.markdown} dangerouslySetInnerHTML={{__html:article.content}}></div>\n\t\t\t</div>\n\t\t)\n\t}\n}\nconst mapStateToProps = state=>{\n  return {\n    receive_data: state.receive_data\n  }\n}\nexport default connect(mapStateToProps)(Article)","import React, { Component } from 'react'\nimport request from '../../request'\nexport default class Ablum extends Component {\n  constructor(){\n    super()\n    this.state = {\n      data:[]\n    }\n  }\n  componentWillMount() {\n    let id = window.location.search.slice(4)\n    this.getPic(id)\n  }\n  getPic(id) {\n    request('get',`/api/ablum?id=${id}`)\n      .then(res=>{\n        console.log(res.data);\n        \n      })\n  }\n\n  render() {\n    return (\n      <div></div>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport * as ActionTypes from './actionTypes'\n\nexport const directory = (state = null, action) => {\n  switch (action.type) {\n    case ActionTypes.DIRECTORY:\n      return action.data\n    default:\n      return 'no match type!!!'\n  }\n}\nexport const receive_data = (state={}, action) => {\n  switch (action.type) {\n    case ActionTypes.RECEIVE_DATA:\n      return state = action.data;\n    default:\n      return state;\n  }\n};\n\nexport const count = (state = 9, action) => {\n  switch (action.type) {\n    case \"increment\":\n      return state + 1;\n    case \"decrement\":\n      return state - 1;\n    default:\n      return state;\n  }\n};\n\n\nconst rootRuducer = combineReducers({\n  directory,count,receive_data\n})\nexport default rootRuducer\n\n\n","export const DIRECTORY = 'directory'\nexport const RECEIVE_DATA = 'receive_data'\nexport const INCREMENT = 'increment'","import {createStore,applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\n\nfunction configStore(init){\n  return createStore(rootReducer,init,applyMiddleware(thunk))\n}\n// export default createStore(rootReducer,applyMiddleware(thunk))\nexport default configStore","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Route from './route'\nimport './asset/index.less';\nimport * as serviceWorker from './serviceWorker';\nimport configStore from './store/index'\n// import store from './store/index'\nimport { Provider } from 'react-redux'\n\nlet store = configStore({receive_data:window.__initData__})\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Route />\n    </Router>\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\nimport {Route} from 'react-router-dom'\nimport Home from './page/home/Home'\nimport Article from './page/article/article'\nimport Ablum from './page/ablum/ablum'\nexport default ()=>{\n    return [\n        <Route path=\"/\" component={Home} key=\"1\" exact />,\n        <Route path=\"/detail\" component={Article} key=\"2\"/>,\n        <Route path=\"/ablum\" component={Ablum} key=\"3\"/>\n    ]\n}","module.exports = __webpack_public_path__ + \"static/media/antumn.560a12e8.webp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"seal\":\"src-page-home-Home__seal--AUghP\",\"home\":\"src-page-home-Home__home--RErGa\",\"title\":\"src-page-home-Home__title--23am2\",\"logo\":\"src-page-home-Home__logo--3RhdV\",\"content\":\"src-page-home-Home__content--2lezL\",\"fold\":\"src-page-home-Home__fold--18SBL\",\"unfold\":\"src-page-home-Home__unfold--PgmbG\"};"],"sourceRoot":""}